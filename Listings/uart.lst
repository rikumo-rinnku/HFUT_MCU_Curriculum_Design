C51 COMPILER V9.60.0.0   UART                                                              02/14/2023 01:12:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: H:\Keil\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart.ls
                    -t) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          extern unsigned char DisplayText[24];              // 储存显示的文本
   3          extern unsigned char DisplaySize;                  // 储存显示的文本长度
   4          unsigned char i;                                   // 用于循环
   5          unsigned char UART1_RX_COUNT = 0;                  // 串口接收计数
   6          unsigned char UART1_RX_BUFFER[UART1_RX_LEN] = {0}; // 串口接收缓冲区
   7          extern void Refresh_Cartoon_Mode(void);
   8          /**
   9           * @brief 串口初始化
  10           */
  11          void UART1_Init(void)
  12          {
  13   1          SCON = 0x50;  // 8位可变波特率模式
  14   1          TMOD &= 0x0F; // 清除定时器配置
  15   1          TMOD |= 0x20; // 定时器1自动重装
  16   1          TL1 = 0x64;   // 波特率2400
  17   1          TH1 = 0x64;   // 波特率2400
  18   1          TR1 = 1;      // 定时器1开始计时
  19   1          ES = 1;       // 允许串口1中断
  20   1          EA = 1;       // 开启总中断
  21   1      }
  22          
  23          /**
  24           * @brief 串口发送1字节数据
  25           * @param dat 串口发送的数据
  26           */
  27          void UART1_Write(unsigned char dat)
  28          {
  29   1          SBUF = dat; // 发送数据
  30   1          while (!TI) // 等待数据发送中断触发
  31   1              ;
  32   1          TI = 0; // 清除发送完成标志位
  33   1      }
  34          /**
  35           * @brief 串口发送字符串
  36           *
  37           * @param s 要发送的字符串指针
  38           */
  39          void UART1_Print(char *s)
  40          {
  41   1          while (*s)
  42   1          {
  43   2              UART1_Write(*s++);
  44   2          }
  45   1      }
  46          /**
  47           * @brief 串口接收中断
  48           */
  49          void UART1_Interrupt(void) interrupt 4
  50          {
  51   1          if (RI) // 如果接收到数据
  52   1          {
  53   2              RI = 0;                                      // 清除接收标志位
  54   2              UART1_RX_BUFFER[UART1_RX_COUNT] = SBUF;      // 读取接收到的数据到数组
C51 COMPILER V9.60.0.0   UART                                                              02/14/2023 01:12:47 PAGE 2   

  55   2              if (UART1_RX_BUFFER[UART1_RX_COUNT] == '\n') // 如果接收到\n
  56   2              {
  57   3                  for (i = 0; i < 24; i++)                 // 遍历显示字符串
  58   3                      DisplayText[i] = 0;                  // 清空数据
  59   3                  for (i = 0; i < UART1_RX_COUNT - 1; i++) // 遍历接收到的数据
  60   3                      DisplayText[i] = UART1_RX_BUFFER[i]; // 复制数据
  61   3                  UART1_Write(UART1_RX_COUNT / 10 + '0');  // 打印回复
  62   3                  UART1_Write(UART1_RX_COUNT % 10 + '0');  // 打印回复
  63   3                  UART1_Print(DisplayText);                // 打印回复
  64   3                  UART1_Print("OK\r\n");                   // 打印回复
  65   3                  Refresh_Cartoon_Mode();                  // 重新刷新动画
  66   3                  UART1_RX_COUNT = 0;                      // 重新开始接收
  67   3              }
  68   2              else                                // 否则
  69   2                  UART1_RX_COUNT++;               // 串口计数自增
  70   2              if (UART1_RX_COUNT >= UART1_RX_LEN) // 如果超出缓冲区
  71   2                  UART1_RX_COUNT = 0;             // 清空计数
  72   2          }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    271    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
